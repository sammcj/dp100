



long sub_402000(long, char * arg2, char arg3) {
    *(*-119 - 'w') += *-119 - 'w';
    *(*-119 - 'w') += *-119 - 'w';
    *(*-119 - 'w') += *-119 - 'w';
    *arg2 += *-119 - 'w';
    *0x1271413 += *-119 - 'w';
}



long sub_403701(long arg1) {/* jump -> undetermined */}



long sub_4061cb(long, int arg2, long arg3, long arg4) {/* jump -> undetermined */}



long sub_406203(long arg1) {}



long sub_40623f(long arg1, char * arg2) {
    long var_0;
    int * var_1;
    var_1, var_0 = var_0();
    *arg2 += (unsigned char)(unsigned int)(var_1 + *var_1);
    if (var_0 != 0L) {/* jump -> undetermined */}
}



long sub_409514() {
    return;
}



long sub_4095db(long arg1) {/* jump -> undetermined */}



long sub_409911() {
    return;
}



long sub_40992d(long arg1) {/* jump -> undetermined */}



long sub_40b6bf(long, long * arg2) {
    return;
}



long sub_40b6c3(long arg1) {/* jump -> undetermined */}



long sub_40b987(long * arg1) {}



long sub_40b9ab() {}



long sub_40b9d7(long, long arg2) {/* jump -> undetermined */}



long sub_40bbe7(long arg1, long arg2, int arg3, void * arg4) {
    int var_0;
    __out_immb_oeax(255U, arg3, var_0);
    /* jump -> undetermined */
}



long sub_40bc27() {
    return;
}



long sub_40bc33(long arg1) {/* jump -> undetermined */}



long sub_40bc67(void * arg1) {
    return;
}



long sub_40bcab(long arg1) {/* jump -> undetermined */}



long sub_40d187() {
    return;
}



void sub_40d18a(void * arg1) {
    void * var_0;
    var_0 = arg1 + 0x380a0000;
    *var_0 -= arg1 >> 1;
}



long sub_40d191() {
    return;
}



long sub_40d197() {
    return;
}



long sub_40d1a4(long arg1) {/* jump -> undetermined */}



long sub_40d325(char * arg1, char arg2, void * arg3, long double arg4) {
    *arg1 += arg1;
    *arg1 += arg1;
}



long sub_40d344(char arg1, void * arg2, short arg3, int arg4) {
    arg2 -= 72L;
    *arg2++;
}



long sub_40d356(char arg1, long arg2, char arg3, short arg4, char * arg5) {
    *arg5 += arg3;
}



long sub_40d362(char arg1, long arg2, short arg3) {/* jump -> undetermined */}



long sub_40f1de(short arg1) {}



long sub_40f1e4(short arg1) {}



long sub_40f1ea(long, short arg2) {}



long sub_40f1f0(char * arg1) {
    *arg1 += 30;
}



long sub_40f1f6(char * arg1) {
    bool var_0;
    *arg1 += var_0 + 30;
}



long sub_40f1fc(char * arg1) {
    *arg1 -= 30;
}



long sub_40f202(long, long arg2) {}



long sub_40f22a() {}



long sub_40f244(int * arg1, short arg2, long arg3, char * arg4) {
    bool var_1;
    int * var_0;
    var_0 = *arg1;
    *arg1 += arg1;
    if (~(var_0 + arg1 < var_0) != false) {
        *arg1 += arg1;
        var_1 = unimplemented;
        if (~var_1 != false) {
            *arg4 += (char)(arg2 >> 1);
        }
    }
}



long sub_40f250(int * arg1) {
    *arg1 += arg1;
}



long sub_40f25c(char * arg1, int * arg2) {
    int * var_0;
    var_0 = *arg2;
    *arg2 += arg2;
    *arg1 -= arg1 + (var_0 + arg2 < var_0);
}



long sub_40f262(int * arg1, char * arg2, long arg3, char * arg4) {
    bool var_0;
    *arg1 += arg1;
    *arg2 += arg1 >> 1;
    var_0 = unimplemented;
    if (~var_0 != false) {
        *arg4 += arg2 >> 1;
    }
}



long sub_40f2ae(long arg1, unsigned char * arg2) {
    *arg2 >>= 1;
}



long sub_40f2cc(long, char arg2, char arg3) {}



long sub_40f2d8(long arg1, char arg2, short arg3, short arg4, char * arg5) {}



long sub_40f2e4(long arg1, long arg2) {}



long sub_40f2ea(int arg1, int * arg2) {
    bool var_0;
    bool var_1;
    bool var_2;
    *arg2 = arg1;
    if ((var_0 | var_1 != var_2) != false) {
        *arg2 = (((*arg2) << ((char)arg1)) | ((*arg2) >> (64 - ((char)arg1))));
    }
}



long sub_40f383(short arg1, char * arg2, int * arg3, void * arg4, void * arg5, unsigned char * arg6) {
    int var_3;
    char var_4;
    char var_5;
    char var_6;
    char var_7;
    void * var_1;
    void * var_2;
    int * var_0;
    var_1 = arg2 + arg6;
    *var_1 += arg3 >> 1;
    var_2 = arg4 >> 1;
    *arg6 += var_2;
    *var_1 += arg3 + *arg6 + *arg6 >> 1;
    *arg6 += var_2;
    var_4 = var_7 & 0xff0000 | (var_7 >> 1 ^ arg4) << 0x8;
    var_7 = var_6 & 0xff0000 | (var_6 >> 1 ^ arg4) << 0x8;
    var_6 = var_5 & 0xff0000 | (var_5 >> 1 ^ arg4) << 0x8;
    var_5 = arg1 & 0xff0000 | (arg1 >> 1 ^ arg4) << 0x8;
    var_1 -= 57L;
    *var_1 += var_4;
    var_1 = arg4 + 50L;
    *var_1 += arg4;
    var_0 = (arg3 + *arg6 + *arg6 + *arg6 + *arg6 | *arg6) + 1;
    arg4 = arg5 + 50L;
    *arg4 += (arg3 + *arg6 + *arg6 + *arg6 + *arg6 | *arg6) + 1 >> 1;
    *arg6 = (((*arg6) << var_4) | ((*arg6) >> (64 - var_4)));
    *var_0 += (arg3 + *arg6 + *arg6 + *arg6 + *arg6 | *arg6) + 1;
    __outsb(arg2, *arg6, arg6, var_3);
}



long sub_40f389(short arg1, char * arg2, int * arg3, void * arg4, void * arg5, char * arg6) {
    int var_3;
    int var_4;
    char var_5;
    char var_6;
    char var_7;
    char var_8;
    void * var_0;
    void * var_1;
    int * var_2;
    var_4 = arg1 >> 1;
    *arg6 += (char)var_4;
    var_0 = arg4 >> 1;
    *arg6 += var_0;
    var_1 = arg2 + arg6;
    *var_1 += arg3 + *arg6 + *arg6 >> 1;
    *arg6 += var_0;
    var_5 = var_8 & 0xff0000 | (var_8 >> 1 ^ arg4) << 0x8;
    var_8 = var_7 & 0xff0000 | (var_7 >> 1 ^ arg4) << 0x8;
    var_7 = var_6 & 0xff0000 | (var_6 >> 1 ^ arg4) << 0x8;
    var_6 = arg1 & 0xff0000 | (var_4 ^ arg4) << 0x8;
    var_0 = var_1 - 57L;
    *var_0 += var_5;
    var_0 = arg4 + 50L;
    *var_0 += arg4;
    var_2 = (arg3 + *arg6 + *arg6 + *arg6 + *arg6 | *arg6) + 1;
    arg4 = arg5 + 50L;
    *arg4 += (arg3 + *arg6 + *arg6 + *arg6 + *arg6 | *arg6) + 1 >> 1;
    *arg6 = (((*arg6) << var_5) | ((*arg6) >> (64 - var_5)));
    *var_2 += (arg3 + *arg6 + *arg6 + *arg6 + *arg6 | *arg6) + 1;
    __outsb(arg2, *arg6, arg6, var_3);
}



void sub_40f3be(int * arg1) {
    *arg1 += arg1;
}



long sub_40f3c4(char arg1, short arg2, int * arg3, char * arg4) {
    long var_1;
    void * var_2;
    int * var_0;
    var_0 = *arg3;
    *arg3 += arg3;
    if (var_0 + arg3 >= 0) {
        *arg4 = (((*arg4) << arg1) | ((*arg4) >> (64 - arg1)));
        *arg3 += arg3;
        var_2 = arg4 + 0x606cf32;
        *var_2 += arg1;
        var_1 = (unsigned int)(arg3 & 0x106cf2b) + 52L;
        *var_1 += (char)(arg2 >> 1);
    }
}



long sub_40f3e2(int * arg1) {
    int * var_0;
    var_0 = *arg1;
    *arg1 += arg1;
}



long sub_40f3e6() {}



long sub_40f3ee(long, short arg2, int * arg3, int arg4) {
    bool tmp_5;
    bool tmp_6;
    unsigned int tmp_1;
    int tmp_2;
    unsigned long tmp_0;
    char tmp_3;
    char tmp_4;
    char var_0;
    *arg3 += arg3;
    var_0 = (char)(arg2 >> 1);
    tmp_6 = arg4 + *0x46ff11 < arg4 & var_0 + *0x46facb + (arg4 + *0x46ff11 < arg4) == var_0;
    tmp_5 = var_0 + *0x46facb + (arg4 + *0x46ff11 < arg4) < var_0 | tmp_6;
    tmp_4 = tmp_5 + '5';
    tmp_3 = arg3 - tmp_4;
    tmp_2 = tmp_3 & 0x2a00010b;
    tmp_0 = *(unsigned int)(tmp_2 ^ 0x106cf);
    tmp_1 = (unsigned int)(tmp_2 ^ 0x106cf);
    *(unsigned int)(tmp_2 ^ 0x106cf) = tmp_0 + tmp_1;
}



long sub_40f40c(int * arg1) {
    *arg1 += arg1;
}



long sub_40f41e(int * arg1) {
    *arg1 += arg1;
}



long sub_40f4d9(long arg1, void * arg2, long arg3, long arg4) {
    bool var_0;
    char var_1;
    arg3 = arg3 + arg4 + 0x60740;
    var_1 = (char)arg1 + var_0;
    *arg3 = *arg3 + var_1;
    arg4 = arg1 - 1L;
    if ((*arg3 + var_1 == 0 | arg4 != 0L) != false) {
        arg2 += 66L;
        *arg2 += (char)arg4;
        return sub_40f528();
    }
}



long sub_40f514(int * arg1) {
    bool var_0;
    int var_2;
    unsigned long var_1;
    var_1 = (unsigned int)(arg1 + *arg1 + var_0);
    var_2 = *((unsigned int)(arg1 + *arg1 + var_0) - 49L);
    *((unsigned int)(arg1 + *arg1 + var_0) - 49L) += 6;
    *var_1 += (unsigned int)var_1 + (var_2 >= -6);
}



long sub_40f520(int * arg1) {
    bool var_0;
    *arg1 += arg1 + var_0;
    return sub_40f528();
}



long sub_40f526(int * arg1) {
    bool var_0;
    *arg1 += arg1 + var_0;
    return sub_40f528();
}



long sub_40f528() {}



long sub_40f52c(int * arg1) {
    bool var_0;
    *arg1 += arg1 + var_0;
}



long sub_40f532(int * arg1) {
    bool var_0;
    *arg1 += arg1 + var_0;
}



long sub_40f54a(int arg1, int * arg2) {
    bool var_0;
    *arg2 += arg2 + var_0;
}



long sub_40f556(long arg1, void * arg2, int * arg3, short arg4, int * arg5, int * arg6) {
    bool var_0;
    void * var_2;
    void * var_3;
    char * var_1;
    *arg3 += arg3 + var_0;
    *arg6 = *arg5;
    var_2 = arg6 + 4L;
    var_3 = var_1 + arg1;
    *var_3 |= arg2;
    var_2 += 0x11086442;
    *var_2 += (char)(arg1 >> 1);
    arg2 += 0x130ccb42;
    *arg2 += (char)(arg4 >> 1);
}



long sub_40f583(long arg1, char arg2, char * arg3) {
    int var_0;
    void * var_2;
    char * var_1;
    __sti(var_0);
    var_2 = var_1 + arg1;
    *var_2 |= arg2;
    *0x1143e0d6 += arg3;
    *arg3 += arg2;
}



long sub_40f586(long arg1, char arg2, int * arg3) {
    bool var_0;
    int var_1;
    void * var_3;
    char * var_2;
    *arg3 += arg3 + var_0;
    __sti(var_1);
    var_3 = var_2 + arg1;
    *var_3 |= arg2;
    *0x1143e0d6 += arg3;
    *arg3 += arg2;
}



long sub_40f59e(short arg1, int * arg2, char * arg3) {
    bool var_0;
    *arg2 += arg2 + var_0;
    *arg3 += (char)(arg1 >> 1);
}



long sub_40f5a9(long, char * arg2, char arg3, short arg4) {
    *arg2 += (char)(arg4 >> 1);
}



long sub_40f5b0(int * arg1) {
    bool var_0;
    *arg1 += arg1 + var_0;
}



long sub_40f5b6(int * arg1) {}



long sub_40f5bc(int * arg1) {
    bool var_0;
    *arg1 += arg1 + var_0;
}



long sub_40f5d0(int arg1, void * arg2, int * arg3) {
    *arg3 = arg1;
    *(arg2 - 56L) = rlc.d([arg2#0 - 0x38].d @ mem#1, 1, c#0);
}



void sub_40f607(long, unsigned short arg2, int arg3, char * arg4, void * arg5) {
    bool var_1;
    int var_0;
    void * var_2;
    __out_dx_oeax(arg2, arg3, var_0);
    *arg4 += (unsigned char)arg2 + var_1;
    var_2 = arg5 + 87L;
    *var_2 += arg5;
}



long sub_410e1e(long arg1, char * arg2) {
    *arg2 += arg2;
    *arg2 |= arg2;
    *arg2 = arg1;
    __fbld(*arg2);
}



long sub_410e75(double * arg1, unsigned short arg2, int * arg3, char arg4, long arg5, void * arg6, char * arg7, long double arg8) {
    int var_1;
    unsigned char var_3;
    char var_2;
    void * var_0;
    unsigned char * var_4;
    unsigned char * var_5;
    *arg3 ^= arg3;
    *arg3 += arg1;
    var_0 = arg6 - 0x71ca42f8;
    *var_0 += arg3;
    var_0 = arg3 + 1L;
    *var_0 += arg6;
    *arg3 += arg3;
    *arg3 |= arg3;
    *arg3 = arg4;
    var_3 = (unsigned char)(arg2 >> 1);
    *arg7 += var_3;
    *var_0 += var_3;
    arg4 = __in_al_dx(arg2, var_1);
    *arg4 ^= arg4;
    *arg4 += arg1;
    arg6 = arg1 + 0x3735c800;
    *arg6 += arg4;
    arg6 = arg4 + 1L;
    *arg6 += var_3;
    *arg4 ^= arg4;
    *arg4 += arg1;
    var_0 = arg1 + 0x3735d100;
    *var_0 += arg4;
    *arg6 += var_3;
    var_2 = arg4 | '2';
    *var_2 += var_2;
    *var_2 |= var_2;
    arg3 = *var_2;
    *var_2 = arg4 | '2';
    arg4 = arg3 - '2';
    *arg4 += arg4;
    *arg4 |= arg4;
    arg3 = *arg4;
    *arg4 = arg4;
    *arg7 += arg3 >> 1;
    var_5, var_4 = __insb(arg7, arg2, var_1);
    *var_4 = var_5;
    *(arg3 ^ *arg3) += arg1;
    arg1 -= 0x59c9ad00;
    *arg1 += arg3 ^ *arg3;
}



long sub_410ec4(void * arg1, char * arg2, char arg3, int * arg4, void * arg5, void * arg6, void * arg7, long arg8) {
    bool var_3;
    int var_5;
    int * var_0;
    int * var_1;
    int * var_2;
    unsigned char * var_6;
    unsigned char * var_7;
    char * var_4;
    *arg4 += arg1 + var_3;
    var_3 = unimplemented;
    var_4 = arg2 >> 1;
    if (var_3 == false) {
        *arg2 ^= var_4;
        *arg4 += arg4;
        *arg4 |= arg4;
        *arg4 = arg4;
        arg1 = arg5 + 54L;
        *arg1 += arg2;
    }
    else {
        var_0 = arg4 ^ *arg4;
        *(arg4 ^ *arg4) += arg1;
        arg7 += 0x5735eb00;
        *arg7 += arg4 ^ *arg4;
        *var_0 += arg1;
        arg7 = arg1 + 0x5f360b00;
        *arg7 += arg4 ^ *arg4;
        var_1 = arg4 ^ *arg4 ^ *var_0;
        *(arg4 ^ *arg4 ^ *var_0) += arg1;
        arg7 = arg1 + 0x130b3f00;
        *arg7 += arg4 ^ *arg4 ^ *var_0;
        var_2 = arg4 ^ *arg4 ^ *var_0 ^ *var_1;
        *(arg4 ^ *arg4 ^ *var_0 ^ *var_1) += arg1;
        arg7 = arg1 + 0x67362700;
        *arg7 += arg4 ^ *arg4 ^ *var_0 ^ *var_1;
        var_7, var_6 = __insb(arg8, arg2 & 0xffffffffffffff0000 | var_4 + *(arg5 + 1L) << 0x8, var_5);
        *var_6 = var_7;
        *(arg4 ^ *arg4 ^ *var_0 ^ *var_1 ^ *var_2) += arg1;
        arg1 -= 0x59c9ad00;
        *arg1 += arg4 ^ *arg4 ^ *var_0 ^ *var_1 ^ *var_2;
    }
}



long sub_411722(int * arg1, float * arg2, char * arg3, char * arg4, char * arg5, long arg6, void * arg7) {
    unsigned int var_8;
    unsigned int var_9;
    int var_4;
    int var_5;
    unsigned char var_10;
    unsigned char var_11;
    char var_6;
    char var_7;
    void * var_0;
    void * var_3;
    char * var_1;
    char * var_2;
    var_4 = (int)arg6 + 1;
    var_1 = arg7 + 1;
    arg7 = arg1 + var_1;
    *arg7 += var_1;
    *arg4 += arg4;
    arg7 = arg1 + 0x8091118;
    *arg7 += arg2;
    var_0 = var_1 + 0x398401;
    *var_0 += &var_3;
    *arg4 += arg1;
    *arg7 += arg2;
    arg7 = var_1 + 0x3ab401;
    *arg7 += &var_3;
    *arg4 += arg1;
    arg7 = arg1 + 0x3743ed00;
    *arg7 += arg4;
    arg7 = var_1 + 0x3ac401;
    *arg7 += arg4 >> 1;
    *arg4 += arg1;
    arg7 = arg5 + 0x4143fb00;
    *arg7 += arg2;
    arg7 = var_2 + 65L;
    var_2 = arg4 - 'Y';
    *arg7 += var_1;
    *var_2 += var_2;
    *var_2 |= var_2;
    *0xffffffffa84e0faf += (unsigned char)(unsigned int)arg1;
    arg6 = var_2 + ((unsigned int)arg1 << 1) + 0x80000;
    *arg6 = *arg6 + &var_3;
    *var_1 += (char)(unsigned int)arg1;
    var_10 = (unsigned char)var_8;
    var_8 = (unsigned int)var_5;
    var_5 = ((char)var_2 | -80) + arg2;
    *arg3 += var_10;
    *var_8 |= var_10;
    *var_8 += arg5;
    var_11 = (unsigned char)var_9;
    var_9 = (unsigned int)(((char)arg1 | -72) + var_1);
    *arg3 += var_11;
    *var_9 |= var_11;
    *arg5 += (unsigned char)(var_8 >> 1);
    arg7 = arg2 + (var_7 << 1);
    var_7 = var_10 | -64;
    *arg7 += &var_3;
    *var_7 += var_7;
    *var_7 |= var_7;
    var_8 = (unsigned int)var_6;
    var_6 = var_5 | -64;
    *0xffffffffc84e1ce7 += (unsigned char)((unsigned long)var_8 >> 1);
    arg7 = arg2 + (var_9 << 1);
    *arg7 += var_9;
    *var_9 += (unsigned char)var_8;
    arg7 = arg5 + 0x26443700;
    *arg7 += arg2;
    arg7 = var_9 + 66L;
    *arg7 += var_4;
    *var_9 += var_9;
    *var_9 |= (char *)var_9;
    arg6 = (unsigned char)var_8 + arg2 + 68L;
    *arg6 += (unsigned char)(unsigned int)arg5;
    *(unsigned int)arg5 += (unsigned char)(unsigned int)arg5;
    *(unsigned int)arg5 |= (unsigned char)(unsigned int)arg5;
    var_6 = (unsigned char)var_6 + arg2;
    *(unsigned int)(var_6 | *0x4321198c) |= arg3;
}



long sub_4117e8() {}



long sub_41182f(int arg1, char arg2, long, char arg4, int * arg5, int arg6, long arg7, void * arg8, long double arg9) {
    unsigned int var_8;
    int var_1;
    int var_2;
    unsigned long var_9;
    long var_5;
    unsigned char var_7;
    void * var_3;
    void * var_4;
    void * var_6;
    int * var_0;
    char * var_10;
    char * var_11;
    *arg5 += arg5;
    *arg5 += arg5;
    var_3 = arg5 + 0x14209100;
    *var_3 += arg5;
    *0x75dd1a17 = arg4;
    *arg5 += arg5;
    *arg5 |= arg5;
    *arg5 += (char)(arg1 >> 1);
    var_7 = (unsigned char)var_8;
    var_8 = (unsigned int)var_2;
    var_2 = arg6 | 0x76d401db;
    *var_8 += var_7;
    *var_8 |= var_7;
    var_3 = arg8 + 70L;
    *var_3 += (char)(var_8 >> 1);
    var_5 = (unsigned int)arg1 + 70L;
    *var_5 += (unsigned char)((unsigned long)arg5 >> 1);
    *(unsigned int)arg1 = *(unsigned int)arg1 | var_7;
    var_3 = (unsigned int)arg1 - 1L;
    if (((*(unsigned int)arg1 | var_7) == 0 | var_3 != 0L) != false) {
        *var_7 += var_3;
        var_4 = var_3 - 0x3ab97d00;
        *var_4 += arg2;
        var_9 = (unsigned int)((unsigned char)var_2 | 0x77a401e1);
        var_7 = (unsigned char)var_8;
        var_8 = (unsigned int)(var_2 | 0x77a401e1);
        *var_8 += var_7;
        *var_8 |= var_7;
    }
    else {
        arg4 = var_7 & 'w';
        *arg4 += arg4;
        *arg4 |= arg4;
        var_4 = (unsigned int)((unsigned char)var_2 & 'w');
        var_9 = (unsigned char)var_3;
        var_0 = arg5 - 0x1ef23aba;
        *var_0 += (unsigned char)var_3;
        var_3 = arg8 + (arg7 << 1) + 0x80000;
        *var_3 += &var_6;
        var_3 = var_4;
    }
    arg8 -= 0x1cfef7ba;
    *arg8 += arg2;
    *(unsigned char)(unsigned int)arg5 += var_3;
    arg7 = (unsigned int)var_9 + 0x54471200;
    *arg7 += arg2;
    arg4 = (unsigned char)(unsigned int)arg5 & 0xffffffffffffff0000 | ((unsigned char)(unsigned int)arg5 >> 1) + (unsigned char)(unsigned int)var_9 << 0x8;
    *arg4 += arg4;
    *arg4 += arg4;
    arg8 = arg4 + 0x79209600;
    *arg8 += arg4;
    __out_immb_oeax(14U, arg4, var_1);
    var_11 = __in_al_immb(1UL, var_1);
    *var_11 += var_11;
    *var_11 += var_11;
    *var_11 -= 'j';
    var_10 = var_11 - 0x1af113b9;
    *var_10 &= (unsigned char)(unsigned int)var_9;
    *var_11 += var_11;
    *var_11 += var_11;
    var_10 = var_11 - 0x4edf6f00;
    *var_10 += var_11;
}



long sub_411858(long arg1, char arg2, char * arg3, void * arg4, long arg5, void * arg6, long double arg7) {
    bool var_0;
    unsigned int var_9;
    int var_6;
    int var_7;
    unsigned char var_8;
    char var_1;
    char var_2;
    void * var_3;
    void * var_4;
    void * var_5;
    var_4 = arg1 - 1L;
    if ((var_0 | var_4 != 0L) != false) {
        *arg3 += var_4;
    }
    else {
        arg3, var_4, arg2 = 0x84118d5(var_4);
    }
    var_5 = var_4 + 0x8467900;
    *var_5 += arg2;
    var_7 = var_4 + &var_3;
    var_4 = arg6 + (arg5 << 1);
    *var_4 += &var_3;
    *arg3 += arg3;
    *arg3 |= arg3;
    var_5 = arg4 - 0x1ef23aba;
    *var_5 += (char)var_7;
    var_4 += 0x80000;
    *var_4 += &var_3;
    arg6 -= 0x1cfef7ba;
    *arg6 += arg2;
    *(unsigned int)arg4 += arg3;
    arg1 = (unsigned int)var_7 + 0x54471200;
    *arg1 += arg2;
    var_9 = (unsigned int)var_2;
    var_2 = arg4 & 0xffffffffffffff0000 | (unsigned char)(arg4 >> 1) + (unsigned char)var_7 << 0x8;
    *var_2 += var_9;
    var_8 = (unsigned char)var_1;
    var_1 = (unsigned int)arg4 & 0xffffffffffffff0000 | ((unsigned int)arg4 >> 1) + (unsigned int)var_7 << 0x8;
    *var_1 += var_8;
    arg1 = var_1 + 0x79209600;
    *arg1 += var_8;
    __out_immb_oeax(14U, var_9, var_6);
    var_8 = __in_al_immb(1UL, var_6);
    *var_8 += var_8;
    *var_8 += var_8;
    *var_8 -= 'j';
    arg1 = var_8 - 0x1af113b9;
    *arg1 &= (unsigned char)(unsigned int)var_7;
    *var_8 += (unsigned int)var_8;
    *var_8 += var_8;
    arg1 = var_8 - 0x4edf6f00;
    *arg1 += var_8;
}



void sub_411b92(long * arg1, void * arg2, short arg3, char * arg4, long arg5) {
    int var_0;
    __sti(var_0);
    arg2 += 0x80000;
    *arg2 += arg4;
    *arg4 += (char)(arg3 >> 1);
    __psubq_mmxq_memq(arg5, *arg1);
}



long sub_413551(int arg1, int * arg2, void * arg3) {
    *arg2 = rlc.d([arg2#0].d @ mem#0, 0xd9, c#1);
}



long sub_4137b4(long arg1, void * arg2, int arg3, void * arg4, long double arg5) {
    long var_3;
    char var_1;
    char var_2;
    void * var_0;
    var_0 = arg4 + arg2 + 96L;
    *var_0 += arg2;
    var_0 = arg4 + 7L;
    *var_0 += arg2;
    var_3 = 0x44074400;
    *0x56112a17 = arg5;
    var_0 = &var_3 + arg3;
    var_1 = arg1 & 0xffffffffffffff0000;
    var_2 = (char)(arg1 >> 1);
    arg2++;
    *(var_0 + (var_1 | (var_2 | *arg2) << 0x8) - 66L) += 0x56112a17;
    arg4 += 12L;
    *arg4 += 0x56112a17;
    return 0xbc0c4b01;
}



void sub_4137db(char * arg1, int arg2, void * arg3, void * arg4) {
    void * var_0;
    arg4 += 12L;
    *arg4 += arg2;
    *arg1 = 0x5d;
    arg4 = (arg3 | -52) + 12L;
    *arg4 += &var_0;
}



long sub_4272c8() {}
